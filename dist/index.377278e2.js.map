{"mappings":"AAAA,eAAe;AAEf,IAAI;AAEJ,sBAAsB;AACtB,MAAM,MAAM,CAAI,OAAW,OAAuC;IAChE,yBAAyB;IACzB,IAAG,MAAM,MAAM,KAAK,GAClB,OAAO;IAGT,wCAAwC;IACxC,IAAI,SAAS,EAAE;IAEf,0CAA0C;IAE1C,IAAI,IAAI,IAAE,GAAG,IAAI,MAAM,MAAM,EAAE,IAC7B,MAAM,CAAC,EAAE,GAAG,KAAK,KAAK,CAAC,EAAE;IAG3B,kBAAkB;IAClB,OAAO;AACT;AAEA,IAAI,aAAa;IAAC;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;CAAG;AAE7C,cAAc;AACd,MAAM,YAAY,IAAI,YAAY,CAAC,MAAQ,IAAI,QAAQ;AAEvD,QAAQ,GAAG,CAAC","sources":["src/index.ts"],"sourcesContent":["// type Map = {\n\n// }\n\n//declare map function\nconst map = <T>(array: [], func: (item: unknown) => unknown[]) => {\n  //Check if array is empty\n  if(array.length === 0) {\n    return array;\n  }\n\n  //create new array to collect new values\n  let result = [];\n\n  //Loop through each item and call the func\n\n  for(let i=0; i < array.length; i++) {\n    result[i] = func(array[i]);\n  }\n\n  //return new array\n  return result;\n}\n\nlet newNumbers = [1, 3, 4, 5, 6, 3, 8, 9, 10];\n\n//@ts-ignore  \nconst converted = map(newNumbers, (num) => num.toString()); \n\nconsole.log(converted);"],"names":[],"version":3,"file":"index.377278e2.js.map","sourceRoot":"../"}